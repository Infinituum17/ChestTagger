plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.4-SNAPSHOT" apply false
    id "me.shedaniel.unified-publishing" version "0.1.+" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "me.shedaniel.unified-publishing"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:${rootProject.minecraft_version}+build.${rootProject.yarn_build}:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    base {
        archivesName = rootProject.archives_base_name
    }

    version = rootProject.mod_version
    group = rootProject.maven_group
    forge_version = rootProject.forge_version
    minecraft_version = rootProject.minecraft_version
    architectury_version = rootProject.architectury_version
    pack_format_version = rootProject.pack_format_version
    archives_base_name = rootProject.archives_base_name

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.

        mavenCentral()

        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }

        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
        }

        maven {
            name = 'Ladysnake Mods'
            url = 'https://maven.ladysnake.org/releases'
        }

        maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
        maven { url = "https://maven.wispforest.io/" }
        maven { url = "https://maven.nucleoid.xyz/" }

        maven {
            name = "Fuzs Mod Resources"
            url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
        }

        maven {
            // location of the maven that hosts JEI files before January 2023
            name = "Progwml6's maven"
            url = "https://dvs1.progwml6.com/files/maven/"
        }
        maven {
            // location of the maven that hosts JEI files since January 2023
            name = "Jared's maven"
            url = "https://maven.blamejared.com/"
        }
        maven {
            // location of a maven mirror for JEI files, as a fallback
            name = "ModMaven"
            url = "https://modmaven.dev"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }


    if ((project.name == "fabric" || project.name == "forge") && project.version != "0.0.0") {
        unifiedPublishing {
            project {
                displayName = "Labelling Containers ${project.minecraft_version}-${project.name} - ${project.mod_version}"
                gameVersions = [project.minecraft_version]
                gameLoaders = [project.name]

                def clog = new File(project.getRootDir(), "changelog.md")

                if (clog.exists()) {
                    changelog = clog.getText()
                }

                version = project.version

                mainPublication remapJar

                relations {
                    if (project.name == "fabric") {
                        // Fabric-Only dependencies
                        depends {
                            curseforge = "fabric-api"
                            modrinth = "fabric-api"
                        }
                    }

                    if (project.name == "forge") {
                        // Forge-Only dependencies
                        optional {
                            curseforge = "colossal-chests"
                            modrinth = "colossal-chests"
                        }

                        optional {
                            curseforge = "iron-chests"
                            modrinth = "iron-chests"
                        }

                        optional {
                            curseforge = "sophisticated-storage"
                        }
                    }

                    // Common dependencies
                    depends {
                        curseforge = "architectury-api"
                        modrinth = "architectury-api"
                    }

                    optional {
                        curseforge = "compactstorage"
                        modrinth = "compact_storage"
                    }

                    optional {
                        curseforge = "echo-chest"
                        modrinth = "echo-chest"
                    }

                    optional {
                        curseforge = "ironchests"
                        modrinth = "ironchests"
                    }

                    optional {
                        curseforge = "new-nether-chest"
                        modrinth = "new-nether-chest"
                    }

                    optional {
                        curseforge = "supplementaries"
                        modrinth = "supplementaries"
                    }

                    optional {
                        curseforge = "more-chests"
                        modrinth = "more-chests"
                    }
                }

                var curseforgeToken = System.getenv("CURSEFORGE_TOKEN")
                if (curseforgeToken != null) {
                    curseforge {
                        token = curseforgeToken
                        id = "844270"
                    }
                }

                var modrinthToken = System.getenv("MODRINTH_TOKEN")
                if (modrinthToken != null) {
                    modrinth {
                        token = modrinthToken
                        id = "b2T42hfY"
                    }
                }
            }
        }
    }
}
