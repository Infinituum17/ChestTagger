plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.6-SNAPSHOT" apply false
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id "me.shedaniel.unified-publishing" version "0.1.+" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"
    apply plugin: "me.shedaniel.unified-publishing"
    apply plugin: "java"

    base {
        archivesName = rootProject.archives_base_name
    }

    repositories {
        mavenCentral()

        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }

        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
        }

        maven {
            name = 'Ladysnake Mods'
            url = 'https://maven.ladysnake.org/releases'
        }

        maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
        maven { url = "https://maven.wispforest.io/" }
        maven { url = "https://maven.nucleoid.xyz/" }
        maven {
            name = "Fuzs Mod Resources"
            url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
        }
        maven {
            name = "Infinituum Mod Resources"
            url = "https://raw.githubusercontent.com/Infinituum17/ModResources/main/maven/"
        }
        maven {
            name = "Greenhouse Maven"
            url = 'https://maven.greenhouseteam.dev/releases/'
        }
        maven { url = "https://mvn.devos.one/releases/" } // Porting Lib
        maven {
            url "https://maven.jamieswhiteshirt.com/libs-release" // Reach Entity Attributes (Required by Porting Lib)
            content {
                includeGroup "com.jamieswhiteshirt"
            }
        }
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }
    }

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered() {
            officialMojangMappings()
            parchment "org.parchmentmc.data:parchment-1.21:2024.07.28@zip"
        }
    }

    java {
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 21
    }

    if ((project.name == "fabric" || project.name == "neoforge") && project.version != "0.0.0") {
        unifiedPublishing {
            project {
                displayName = "Labelling Containers ${project.minecraft_version}-${project.name} - ${project.mod_version}"
                gameVersions = [project.minecraft_version]
                gameLoaders = [project.name]

                def clog = new File(project.getRootDir(), "changelog.md")

                if (clog.exists()) {
                    changelog = clog.getText()
                }

                version = project.version

                mainPublication remapJar

                relations {
                    if (project.name == "fabric") {
                        // Fabric-Only dependencies
                        depends {
                            curseforge = "fabric-api"
                            modrinth = "fabric-api"
                        }
                    }

                    // Common dependencies
                    depends {
                        curseforge = "architectury-api"
                        modrinth = "architectury-api"
                    }

                    depends {
                        curseforge = "fastconfigapi"
                        modrinth = "fastconfigapi"
                    }
                }

                var curseforgeToken = System.getenv("CURSEFORGE_TOKEN")
                if (curseforgeToken != null) {
                    curseforge {
                        token = curseforgeToken
                        id = "844270"
                    }
                }

                var modrinthToken = System.getenv("MODRINTH_TOKEN")
                if (modrinthToken != null) {
                    modrinth {
                        token = modrinthToken
                        id = "b2T42hfY"
                    }
                }
            }
        }
    }
}
